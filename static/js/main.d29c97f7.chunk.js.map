{"version":3,"sources":["Context.js","components/Firstpage.jsx","components/Secondpage.jsx","components/Thiredpage.jsx","components/Fourthpage.jsx","Buttons.jsx","App.js","serviceWorker.js","index.js"],"names":["myData","createContext","Provider","Consumer","Firstpage","data","className","TextField","id","label","defaultValue","firstName","variant","onChange","e","setFirstName","target","value","lastName","setLastName","email","type","setEmail","Secondpage","address","setAddress","hobby","setHobby","bio","setBio","Thiredpage","Fourthpage","Buttons","page","disabled","onClick","setPage","App","useState","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d29c97f7.chunk.js","sourcesContent":["import React, { createContext } from \"react\";\r\nexport const myData = createContext();\r\n\r\nexport const Provider = myData.Provider;\r\nexport const Consumer = myData.Consumer;\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\nimport { Consumer } from \"../Context\";\r\nimport { TextField } from \"@material-ui/core\";\r\nfunction Firstpage() {\r\n  return (\r\n    <Consumer>\r\n      {(data) => (\r\n        <div className=\"d-flex flex-column form__elements\">\r\n          <h2 className=\"text-center pb-3\">This is First Page</h2>\r\n          <TextField\r\n            id=\"outlined-required\"\r\n            label=\"First Name\"\r\n            defaultValue={data.firstName}\r\n            variant=\"outlined\"\r\n            className=\"mb-3\"\r\n            onChange={(e) => {\r\n              data.setFirstName(e.target.value);\r\n            }}\r\n          />\r\n\r\n          <TextField\r\n            id=\"outlined-required\"\r\n            label=\"Last Name\"\r\n            defaultValue={data.lastName}\r\n            variant=\"outlined\"\r\n            className=\"mb-3\"\r\n            onChange={(e) => {\r\n              data.setLastName(e.target.value);\r\n            }}\r\n          />\r\n\r\n          <TextField\r\n            id=\"outlined-required\"\r\n            label=\"Email\"\r\n            defaultValue={data.email}\r\n            variant=\"outlined\"\r\n            type=\"email\"\r\n            className=\"mb-3\"\r\n            onChange={(e) => {\r\n              data.setEmail(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n      )}\r\n    </Consumer>\r\n  );\r\n}\r\n\r\nexport default Firstpage;\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\nimport { Consumer } from \"../Context\";\r\nimport { TextField } from \"@material-ui/core\";\r\nfunction Secondpage() {\r\n  return (\r\n    <Consumer>\r\n      {(data) => (\r\n        <div className=\"d-flex flex-column form__elements\">\r\n          <h2 className=\"text-center pb-3\">This is Second Page</h2>\r\n          <TextField\r\n            id=\"outlined-required\"\r\n            label=\"Address\"\r\n            defaultValue={data.address}\r\n            variant=\"outlined\"\r\n            className=\"mb-3\"\r\n            onChange={(e) => {\r\n              data.setAddress(e.target.value);\r\n            }}\r\n          />\r\n\r\n          <TextField\r\n            id=\"outlined-required\"\r\n            label=\"Hobby\"\r\n            defaultValue={data.hobby}\r\n            variant=\"outlined\"\r\n            className=\"mb-3\"\r\n            onChange={(e) => {\r\n              data.setHobby(e.target.value);\r\n            }}\r\n          />\r\n\r\n          <TextField\r\n            id=\"outlined-required\"\r\n            label=\"Bio\"\r\n            defaultValue={data.bio}\r\n            variant=\"outlined\"\r\n            type=\"email\"\r\n            className=\"mb-3\"\r\n            onChange={(e) => {\r\n              data.setBio(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n      )}\r\n    </Consumer>\r\n  );\r\n}\r\n\r\nexport default Secondpage;\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\nimport { Consumer } from \"../Context\";\r\nfunction Thiredpage() {\r\n  return (\r\n    <Consumer>\r\n      {(data) => (\r\n        <div className=\"form__elements\">\r\n          <h2 className=\"text-center pb-3\">Check Your All information:</h2>\r\n          <table className=\"table\">\r\n            <tr>\r\n              <td>\r\n                <h5>First Name</h5>\r\n              </td>\r\n              <td>:</td>\r\n              <td>{data.firstName}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <h5>Last Name</h5>\r\n              </td>\r\n              <td>:</td>\r\n              <td>{data.lastName}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <h5>Email</h5>\r\n              </td>\r\n              <td>:</td>\r\n              <td>{data.email}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <h5>Address</h5>\r\n              </td>\r\n              <td>:</td>\r\n              <td>{data.address}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <h5>Hobby</h5>\r\n              </td>\r\n              <td>:</td>\r\n              <td>{data.hobby}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <h5>Bio</h5>\r\n              </td>\r\n              <td>:</td>\r\n              <td>{data.bio}</td>\r\n            </tr>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </Consumer>\r\n  );\r\n}\r\n\r\nexport default Thiredpage;\r\n","import React from \"react\";\r\nimport { Consumer } from \"../Context\";\r\n\r\nfunction Fourthpage() {\r\n  return (\r\n    <Consumer>\r\n      {(data) => (\r\n        <div className=\"text-center form__elements\">\r\n          <h1>\r\n            Congratulations{\" \"}\r\n            <span className=\"text-success\">\r\n              {data.firstName + \" \" + data.lastName}\r\n            </span>{\" \"}\r\n          </h1>\r\n          <h4>You have successfully submitted the form.</h4>\r\n        </div>\r\n      )}\r\n    </Consumer>\r\n  );\r\n}\r\n\r\nexport default Fourthpage;\r\n","import React from \"react\";\r\nimport { Consumer } from \"./Context\";\r\nimport \"./App.css\";\r\n\r\nfunction Buttons() {\r\n  return (\r\n    <div>\r\n      <Consumer>\r\n        {(data) => (\r\n          <div>\r\n            <div className={`buttons ${data.page >= 3 && \"d-none\"}`}>\r\n              <button\r\n                disabled={data.page === 4}\r\n                className=\"btn btn-primary\"\r\n                onClick={() => {\r\n                  data.setPage(data.page + 1);\r\n                }}\r\n              >\r\n                Next\r\n              </button>\r\n              <button\r\n                className=\"btn btn-secondary\"\r\n                disabled={data.page === 1}\r\n                onClick={() => {\r\n                  data.setPage(data.page - 1);\r\n                }}\r\n              >\r\n                Back\r\n              </button>\r\n            </div>\r\n            <div className={`buttons ${data.page !== 3 && \"d-none\"}`}>\r\n              <button\r\n                disabled={data.page === 4}\r\n                className=\"btn btn-success\"\r\n                onClick={() => {\r\n                  data.setPage(data.page + 1);\r\n                }}\r\n              >\r\n                Confirm Submission\r\n              </button>\r\n              <button\r\n                className=\"btn btn-secondary\"\r\n                disabled={data.page === 1}\r\n                onClick={() => {\r\n                  data.setPage(data.page - 1);\r\n                }}\r\n              >\r\n                Check Again\r\n              </button>\r\n            </div>\r\n            <div className={`buttons ${data.page !== 4 && \"d-none\"}`}>\r\n              <button\r\n                className=\"btn btn-secondary\"\r\n                disabled={data.page === 1}\r\n                onClick={() => {\r\n                  data.setPage(data.page - 1);\r\n                }}\r\n              >\r\n                Back\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Consumer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Buttons;\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Firstpage from \"./components/Firstpage\";\nimport Secondpage from \"./components/Secondpage\";\nimport Thiredpage from \"./components/Thiredpage\";\nimport Fourthpage from \"./components/Fourthpage\";\nimport Buttons from \"./Buttons.jsx\";\nimport { Provider } from \"./Context\";\n\nfunction App() {\n  const [page, setPage] = useState(1);\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [hobby, setHobby] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [bio, setBio] = useState(\"\");\n\n  const myData = {\n    page: page,\n    setPage: setPage,\n    firstName: firstName,\n    setFirstName: setFirstName,\n    lastName: lastName,\n    setLastName: setLastName,\n    email: email,\n    setEmail: setEmail,\n    hobby: hobby,\n    setHobby: setHobby,\n    address: address,\n    setAddress: setAddress,\n    bio: bio,\n    setBio: setBio,\n  };\n\n  return (\n    <div className=\"app\">\n      <Provider value={myData}>\n        <div className=\"form\">\n          {page === 1 && <Firstpage />}\n          {page === 2 && <Secondpage />}\n          {page === 3 && <Thiredpage />}\n          {page === 4 && <Fourthpage />}\n\n          <Buttons />\n        </div>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}